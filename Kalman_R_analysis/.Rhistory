# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "KF", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 250) +
theme(axis.text=element_text(size=18),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
# ggsave(file="plots/rel_trans_err.pdf", plot=bxp1, width=6.2, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "KF", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 250) +
theme(axis.text=element_text(size=18),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
ggsave(file="plots/kitti.pdf", plot=bxp1, width=5, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "KF", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 250) +
theme(axis.text=element_text(size=18),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
ggsave(file="plots/kitti.pdf", plot=bxp1, width=6, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "KF", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 250) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
ggsave(file="plots/kitti.pdf", plot=bxp1, width=4, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(lmerTest)
# library(viridis)
# library(hrbrthemes)
# install.packages("ggsci")
library(ggsci)
View(task_df)
View(task_df)
setwd("C:/Users/micha/OneDrive/ETH_GitHub_Repos/rpg_trajectory_evaluation/Kalman_R_analysis/data/")
task_df <- read_csv("all_errors_no_kf.csv")
# dist_levels_order <- c("dist1", "dist2", "dist3", "dist4", "dist5")
# dataset_order <- c("kitti", "malaga", "parking")
#
# # Reorder the factor levels
# task_df$dist_factor <- factor(task_df$dist_factor, levels = dist_levels_order)
# task_df$dataset <- factor(task_df$KF, levels = kf_order)
#
# # some new columns
# task_df$"Distance" <- task_df$dist_factor
#
# levels(task_df$"Distance") <- c("220.44", "440.88", "661.33", "881.77", "1102.22")
#
#
# ######################### get mean and sd (or se) #########################
# task_df %>%
#   group_by(dist_factor, KF) %>%
#   get_summary_stats(trans_err, type = "mean_sd")
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(lmerTest)
# library(viridis)
# library(hrbrthemes)
# install.packages("ggsci")
library(ggsci)
View(task_df)
View(task_df)
setwd("C:/Users/micha/OneDrive/ETH_GitHub_Repos/rpg_trajectory_evaluation/Kalman_R_analysis/data/")
task_df <- read_csv("all_errors_no_kf.csv")
dist_levels_order <- c("dist1", "dist2", "dist3", "dist4", "dist5")
dataset_order <- c("kitti", "malaga", "parking")
# Reorder the factor levels
task_df$dist_factor <- factor(task_df$dist_factor, levels = dist_levels_order)
task_df$dataset <- factor(task_df$dataset, levels = dataset_order)
# some new columns
task_df$"Distance" <- task_df$dist_factor
levels(task_df$"Distance") <- c("220.44", "440.88", "661.33", "881.77", "1102.22")
######################### get mean and sd (or se) #########################
task_df %>%
group_by(dist_factor, dataset) %>%
get_summary_stats(trans_err, type = "mean_sd")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "dataset", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 250) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
ggsave(file="plots/kitti.pdf", plot=bxp1, width=4, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "dataset", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 250) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
ggsave(file="plots/kitti_baseline.pdf", plot=bxp1, width=4, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "dataset", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 500) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
ggsave(file="plots/kitti_baseline.pdf", plot=bxp1, width=4, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "dataset", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 1000) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
ggsave(file="plots/kitti_baseline.pdf", plot=bxp1, width=4, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
bxp1 <- ggboxplot(
task_df, x = "Distance", y = "trans_err",
color = "dataset", palette = "uchicago", outlier.shape = NA,
xlab = "Distance (m)", ylab = "Translation Error (m)"
) + ylim(0, 600) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=20),
legend.title=element_text(size=18),
legend.text=element_text(size=18))
bxp1
ggsave(file="plots/kitti_baseline.pdf", plot=bxp1, width=4, height=5)
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_perc_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
#
# bxp1 <- ggboxplot(
#   task_df, x = "dist_factor", y = "yaw_err",
#   color = "detector", palette = "uchicago", outlier.shape = NA
#   )
# bxp1
# # Plot
# task_df %>%
#   ggplot( aes(x=fitts_id_level, y=average_mt, fill=auto_level)) +
#     geom_boxplot() +
#     scale_fill_viridis(discrete = TRUE, alpha=0.6) +
#     geom_jitter(color="black", size=0.4, alpha=0.9) +
#     theme_ipsum() +
#     theme(
#       legend.position="none",
#       plot.title = element_text(size=11)
#     ) +
#     ggtitle("A boxplot with jitter") +
#     xlab("")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = c(dist_factor, dataset)
)
get_anova_table(res.aov)
#################### Effect of auto_level for each ring_id ####################
one.way <- task_df %>%
group_by(dataset) %>%
anova_test(dv = trans_err, wid = sample_id, within = dist_factor) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way
#################### Effect of ring_id for each auto_level ####################
one.way <- task_df %>%
group_by(dist_factor) %>%
anova_test(dv = trans_err, wid = sample_id, within = dataset) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way
#################### Pairwise comparisons between auto_level groups for each ring_id ####################
pwc1 <- task_df %>%
group_by(dist_factor) %>%
pairwise_t_test(
trans_err ~ dataset, paired = TRUE,
p.adjust.method = "holm"
)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = trans_err, wid = sample_id,
within = c(dist_factor, dataset)
)
get_anova_table(res.aov)
#################### Effect of auto_level for each ring_id ####################
one.way <- task_df %>%
group_by(dataset) %>%
anova_test(dv = trans_err, wid = sample_id, within = dist_factor) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way
#################### Effect of ring_id for each auto_level ####################
one.way <- task_df %>%
group_by(dist_factor) %>%
anova_test(dv = trans_err, wid = sample_id, within = dataset) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
one.way
#################### Pairwise comparisons between auto_level groups for each ring_id ####################
pwc1 <- task_df %>%
group_by(dist_factor) %>%
t_test(
trans_err ~ dataset,
p.adjust.method = "holm"
)
pwc1
# # Create a box plot
# pwc1 <- pwc1 %>% add_xy_position(x = "detector", group = "dist_factor")
# bxp2 <- ggboxplot(
#   task_df, x = "detector", y = "trans_err",
#   color = "dist_factor", palette = "jco", outlier.shape = NA
# ) +
#   stat_pvalue_manual(
#     pwc1, color = "dist_factor", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.15, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp2
#################### Pairwise comparisons between ring_id groups for each auto_level ####################
pwc2 <- task_df %>%
group_by(dataset) %>%
t_test(
trans_err ~ dist_factor,
p.adjust.method = "holm"
)
pwc2
# # Create a box plot
# pwc2 <- pwc2 %>% add_xy_position(x = "dist_factor", group = "detector")
# bxp3 <- ggboxplot(
#   task_df, x = "dist_factor", y = "trans_err",
#   color = "detector", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc2, color = "detector", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.5, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp3
###### fit linear mixed model 0 - EXCLUDING THE INTERACTION TERM ######
# model <- lmer(trans_err ~ distance + feature_detector + (1|sample_id),
#               data = task_df)
# summary(model)
#
#
# ###### fit linear mixed model 1 ######
# model <- lmer(trans_err ~ distance * feature_detector + (1|sample_id),
#               data = task_df)
# summary(model)
# full_model <- lmer(trans_err ~ distance * Detector + (1 | sample_id), data = task_df)
# anova(full_model)
###### fit linear mixed model 2 ######
fit <- lm(trans_err ~ distance * dataset, data = task_df)
summary(fit)
uchicago_palette <- c("#800000", "#767676", "#FFA319")
plt <- interact_plot(fit, pred = distance, modx = dataset,
interval = TRUE, int.type = "confidence", int.width = .95,
# plot.points = TRUE,
x.label="Distance (m)", y.label="Translation Error (m)",
# modx.labels = c("low", "med", "high")
) +
scale_fill_manual(values = uchicago_palette) +
scale_color_manual(values = uchicago_palette) +
theme(legend.text=element_text(size=22),
legend.title=element_text(size=22),
axis.text=element_text(size=22),
axis.title=element_text(size=22))
plt
# ggsave(file="plots/interaction.pdf", plot=plt, width=12, height=5)
